<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Threads on KTS Blog</title>
    <link>http://localhost:1313/blog/tags/threads/</link>
    <description>Recent content in Threads on KTS Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Krishnatejaswi S</copyright>
    <lastBuildDate>Tue, 20 Aug 2024 23:57:15 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/tags/threads/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Process vs Threads</title>
      <link>http://localhost:1313/blog/posts/core_points/process-vs-threads/</link>
      <pubDate>Tue, 20 Aug 2024 23:57:15 +0530</pubDate>
      <guid>http://localhost:1313/blog/posts/core_points/process-vs-threads/</guid>
      <description>Process Vs Thread [Popular Interview Question] A process is an independent unit of execution with its own memory space, while a thread is a lightweight unit of execution that shares memory space with other threads within the same process.&#xA;Process A process is an independent, self-contained unit of execution that has its own memory space, including the code segment, data segment, heap, and stack.&#xA;Address Space: Each process operates in its own virtual address space, meaning it has its own separate memory layout and cannot directly access the memory of another process without inter-process communication (IPC).</description>
    </item>
  </channel>
</rss>
