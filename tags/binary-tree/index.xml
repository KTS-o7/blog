<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Binary-Tree on KTS Blog</title>
    <link>https://KTS-o7.github.io/blog/tags/binary-tree/</link>
    <description>Recent content in Binary-Tree on KTS Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Krishnatejaswi S</copyright>
    <lastBuildDate>Thu, 18 Jul 2024 16:16:45 +0530</lastBuildDate>
    <atom:link href="https://KTS-o7.github.io/blog/tags/binary-tree/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Problem Number of Good Leaf Nodes Pairs</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-number-of-good-leaf-nodes-pairs/</link>
      <pubDate>Thu, 18 Jul 2024 16:16:45 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-number-of-good-leaf-nodes-pairs/</guid>
      <description>Problem Statement Link - Problem 1530 Question You are given the root of a binary tree and an integer distance. A pair of two different leaf nodes of a binary tree is said to be good if the length of the shortest path between them is less than or equal to distance.&#xA;Return the number of good leaf node pairs in the tree.&#xA;Example 1 Input: root = [1,2,3,null,4], distance = 3 Output: 1 Explanation: The leaf nodes of the tree are 3 and 4 and the length of the shortest path between them is 3.</description>
    </item>
    <item>
      <title>Problem Delete Nodes and Return Forest</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-delete-nodes-and-return-forest/</link>
      <pubDate>Wed, 17 Jul 2024 12:04:05 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-delete-nodes-and-return-forest/</guid>
      <description>Problem Statement Link - Problem 1110 Question Given the root of a binary tree, each node in the tree has a distinct value.&#xA;After deleting all nodes with a value in to_delete, we are left with a forest (a disjoint union of trees).&#xA;Return the roots of the trees in the remaining forest. You may return the result in any order.&#xA;Example 1 Input: root = [1,2,3,4,5,6,7], to_delete = [3,5] Output: [[1,2,null,4],[6],[7]] Example 2 Input: root = [1,2,4,null,3], to_delete = [3] Output: [[1,2,4]] Constraints - The number of nodes in the given tree is at most `1000`.</description>
    </item>
    <item>
      <title>Problem Step by Step Directions From a Binary Tree Node to Another</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-step-by-step-directions-from-a-binary-tree-node-to-another/</link>
      <pubDate>Tue, 16 Jul 2024 12:54:12 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-step-by-step-directions-from-a-binary-tree-node-to-another/</guid>
      <description>Problem Statement Link - Problem 2096 Question You are given the root of a binary tree with n nodes. Each node is uniquely assigned a value from 1 to n. You are also given an integer startValue representing the value of the start node s, and a different integer destValue representing the value of the destination node t.&#xA;Find the shortest path starting from node s and ending at node t.</description>
    </item>
    <item>
      <title>Problem Create Binary Tree From Descriptions</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-create-binary-tree-from-descriptions/</link>
      <pubDate>Mon, 15 Jul 2024 15:17:40 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-create-binary-tree-from-descriptions/</guid>
      <description>Problem Statement Link - Problem 2196 Question You are given a 2D integer array descriptions where descriptions[i] = [parenti, childi, isLefti] indicates that parenti is the parent of childi in a binary tree of unique values. Furthermore,&#xA;If isLefti == 1, then childi is the left child of parenti. If isLefti == 0, then childi is the right child of parenti. Construct the binary tree described by descriptions and return its root.</description>
    </item>
    <item>
      <title>Problem Serialize and Deserialize Binary Tree</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-serialize-and-deserialize-binary-tree/</link>
      <pubDate>Fri, 12 Jul 2024 19:24:33 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-serialize-and-deserialize-binary-tree/</guid>
      <description>Problem Statement Link - Problem 297 Question Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.&#xA;Design an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work.</description>
    </item>
    <item>
      <title>Problem Invert Binary Tree</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-invert-binary-tree/</link>
      <pubDate>Sun, 30 Jun 2024 18:59:42 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-invert-binary-tree/</guid>
      <description>Problem Statement Link - Problem 226 Question Given the root of a binary tree, invert the tree and return its root.&#xA;Example 1 Input: root = [4,2,7,1,3,6,9] Output: [4,7,2,9,6,3,1] Input: graph TD 4 --- 2 4 --- 7 2 --- 1 2 --- 3 7 --- 6 7 --- 9 Output : graph TD 4 --- 7 4 --- 2 7 --- 9 7 --- 6 2 --- 3 2 --- 1 Example 2 Input: root = [2,1,3] Output: [2,3,1] Input : graph TD 2 --- 1 2 --- 3 Output : graph TD 2 --- 3 2 --- 1 Example 3 Input: root = [] Output: [] Constraints - The number of nodes in the tree is in the range `[0, 100]`.</description>
    </item>
    <item>
      <title>Problem Balance a Binary Search Tree</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-balance-a-binary-search-tree/</link>
      <pubDate>Wed, 26 Jun 2024 14:23:32 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-balance-a-binary-search-tree/</guid>
      <description>Problem Statement Link - Problem 1382 Question Given the root of a binary search tree, return a balanced binary search tree with the same node values. If there is more than one answer, return any of them.&#xA;A binary search tree is balanced if the depth of the two subtrees of every node never differs by more than 1.&#xA;Example 1 Input: root = [1,null,2,null,3,null,4,null,null] Output: [2,1,3,null,null,null,4] Explanation: This is not the only correct answer, [3,1,4,null,2] is also correct.</description>
    </item>
    <item>
      <title>Problem Binary Search Tree to Greater Sum Tree</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-binary-search-tree-to-greater-sum-tree/</link>
      <pubDate>Tue, 25 Jun 2024 09:30:02 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-binary-search-tree-to-greater-sum-tree/</guid>
      <description>Problem Statement Link - Problem 1038 Question Given the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.&#xA;As a reminder, a binary search tree is a tree that satisfies these constraints:&#xA;The left subtree of a node contains only nodes with keys less than the node&amp;rsquo;s key.</description>
    </item>
    <item>
      <title>Problem Distribute Coins in Binary Tree</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-distribute-coins-in-binary-tree/</link>
      <pubDate>Sun, 19 May 2024 10:29:15 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-distribute-coins-in-binary-tree/</guid>
      <description>Problem Statement Link - Problem 979 Question You are given the root of a binary tree with n nodes where each node in the tree has node.val coins. There are n coins in total throughout the whole tree.&#xA;In one move, we may choose two adjacent nodes and move one coin from one node to another. A move may be from parent to child, or from child to parent.&#xA;Return the minimum number of moves required to make every node have exactly one coin.</description>
    </item>
    <item>
      <title>Problem Delete Leaves With a Given Value</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-delete-leaves-with-a-given-value/</link>
      <pubDate>Sun, 19 May 2024 10:27:59 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-delete-leaves-with-a-given-value/</guid>
      <description>Problem Statement Link - Problem 1325 Question Given a binary tree root and an integer target, delete all the leaf nodes with value target.&#xA;Note that once you delete a leaf node with value target, if its parent node becomes a leaf node and has the value target, it should also be deleted (you need to continue doing that until you cannot).&#xA;Example 1 Input: root = [1,2,3,2,null,2,4], target = 2 Output: [1,null,3,null,4] Explanation: Leaf nodes in green with value (target = 2) are removed (Picture in left).</description>
    </item>
    <item>
      <title>Problem Evaluate Boolean Binary Tree</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-evaluate-boolean-binary-tree/</link>
      <pubDate>Fri, 17 May 2024 21:05:30 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-evaluate-boolean-binary-tree/</guid>
      <description>Problem Statement Link - Problem 2331 Question You are given the root of a full binary tree with the following properties:&#xA;Leaf nodes have either the value 0 or 1, where 0 represents False and 1 represents True. Non-leaf nodes have either the value 2 or 3, where 2 represents the boolean OR and 3 represents the boolean AND. The evaluation of a node is as follows:&#xA;If the node is a leaf node, the evaluation is the value of the node, i.</description>
    </item>
    <item>
      <title>Problem Smallest String Starting From Leaf</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-smallest-string-starting-from-leaf/</link>
      <pubDate>Wed, 17 Apr 2024 14:56:36 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-smallest-string-starting-from-leaf/</guid>
      <description>Problem Statement Link - Problem 988 Question You are given the root of a binary tree where each node has a value in the range [0, 25] representing the letters &#39;a&#39; to &#39;z&#39;.&#xA;Return the lexicographically smallest string that starts at a leaf of this tree and ends at the root.&#xA;As a reminder, any shorter prefix of a string is lexicographically smaller.&#xA;For example, &amp;quot;ab&amp;quot; is lexicographically smaller than &amp;quot;aba&amp;quot;.</description>
    </item>
    <item>
      <title>Problem Add One Row to Tree</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-add-one-row-to-tree/</link>
      <pubDate>Tue, 16 Apr 2024 10:05:52 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-add-one-row-to-tree/</guid>
      <description>Problem Statement Link - Problem 623 Question Given the root of a binary tree and two integers val and depth, add a row of nodes with value val at the given depth depth.&#xA;Note that the root node is at depth 1.&#xA;The adding rule is:&#xA;Given the integer depth, for each not null tree node cur at the depth depth - 1, create two tree nodes with value val as cur&#39;s left subtree root and right subtree root.</description>
    </item>
    <item>
      <title>Problem Sum Root to Leaf Numbers</title>
      <link>https://KTS-o7.github.io/blog/posts/problem-sum-root-to-leaf-numbers/</link>
      <pubDate>Mon, 15 Apr 2024 19:38:03 +0530</pubDate>
      <guid>https://KTS-o7.github.io/blog/posts/problem-sum-root-to-leaf-numbers/</guid>
      <description>Problem Statement Link - Problem 129 Question You are given the root of a binary tree containing digits from 0 to 9 only.&#xA;Each root-to-leaf path in the tree represents a number.&#xA;For example, the root-to-leaf path 1 -&amp;gt; 2 -&amp;gt; 3 represents the number 123. Return the total sum of all root-to-leaf numbers. Test cases are generated so that the answer will fit in a 32-bit integer.&#xA;A leaf node is a node with no children.</description>
    </item>
  </channel>
</rss>
